{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/pages/cadastro/cadastro.component.ts","./src/app/pages/cadastro/cadastro.component.html","./src/app/pages/cadastro/cadastro.service.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/login/login.service.ts","./src/environments/environment.ts","./src/main.ts","./src/material/material.module.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\nimport { AuthGuard } from './auth/auth.guard';\n\n\nconst routes: Routes = [\n\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'cadastro',\n    component: CadastroComponent\n  },\n  {\n    path: '',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full'\n      },\n      {\n        path: 'home',\n        component: HomeComponent\n      },\n\n      {\n        path: '*',\n        component: CadastroComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  }\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'docker-lab';\n}\n","\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from 'src/material/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    CadastroComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MaterialModule,\n    FlexLayoutModule \n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../pages/login/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class AuthGuard implements CanActivate {\n\n  constructor(private loginService:LoginService,private router:Router){\n  \n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    const currentUser = this.loginService.userDataValue;\n    if (currentUser) {\n      return true;\n    }\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CadastroService } from './cadastro.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss']\n})\nexport class CadastroComponent implements OnInit {\n  cadastroForm: FormGroup;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private cadastroService:CadastroService,\n    private snackBar:MatSnackBar) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  private createForm() {\n    this.cadastroForm = this.formBuilder.group({\n      usuario: ['', Validators.required],\n      idade: ['',Validators.required],\n      senha: ['',Validators.required],\n      email: [''],\n    });\n  }\n\n  cadastrar(){\n\n    if(!this.cadastroForm.valid){\n      return;\n    }\n    const user = this.cadastroForm.getRawValue();\n\n    this.cadastroService.cadastar(user).subscribe(res=>{\n      this.router.navigate(['/login'])\n    }, error=>{\n     \n      this.snackBar.open(error.error.message, 'Sair', {\n        duration: 3000\n      });\n    })\n  }\n\n  IrParaLogin(){\n    this.router.navigate(['/login'])\n  }\n\n}\n","<div fxFill fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1.5rem\" class=\"mat-typography\">\n    <div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"2rem\">\n        </div>\n    </div>\n    <div class=\"login-container\" fxLayout=\"row\" fxLayoutAlign=\"center\">\n        <mat-card fxLayout=\"column \" fxLayoutAlign=\"center\" class=\"login-box\">\n            <form (ngSubmit)=\"cadastrar()\" [formGroup]=\"cadastroForm\" novalidate>\n                <div class=\"login-fields\" fxLayout=\"column\" fxLayoutAlign=\"space-evenly\">\n                    <h1 class=\"mb30 mt30\" style=\"text-align: center\">Cadastro</h1>\n                    <mat-form-field [hideRequiredMarker]=\"true\" appearance=\"fill\">\n                        <mat-label>Usuario</mat-label>\n                        <input type=\"text\" matInput formControlName=\"usuario\" autocomplete=\"usuario\" required />\n                    </mat-form-field>\n                    <mat-form-field [hideRequiredMarker]=\"true\" appearance=\"fill\">\n                        <mat-label>Senha</mat-label>\n                        <input type=\"text\" matInput formControlName=\"senha\" autocomplete=\"senha\" required />\n                    </mat-form-field>\n                    <mat-form-field [hideRequiredMarker]=\"true\" appearance=\"fill\">\n                        <mat-label>Idade</mat-label>\n                        <input type=\"number\" matInput formControlName=\"idade\" autocomplete=\"username\" required />\n                    </mat-form-field>\n                    <!-- <mat-form-field [hideRequiredMarker]=\"true\" appearance=\"fill\">\n                        <mat-label>email</mat-label>\n                        <input type=\"text\" matInput formControlName=\"idade\" autocomplete=\"username\" required />\n                    </mat-form-field> -->\n                    <button class=\"mt30\" mat-raised-button color=\"accent\" type=\"submit\">\n                        <span>Cadastrar</span>\n                    </button>\n                </div>\n            </form>\n            <div style=\"text-align: center\"  class=\"mt20\">\n                <mat-divider style=\"margin-bottom: 10px\"></mat-divider>\n                <span (click)=\"IrParaLogin()\"  class=\"mt20 linkcadastro\">voltar para tela de login</span>\n            </div>\n        </mat-card>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CadastroService {\n\n  constructor(private http:HttpClient) { }\n\n  urlBase = environment.urlbase+'/auth'\n\n  cadastar(user):Observable<any>{\n    console.log(user)\n    return this.http.post<any>(this.urlBase +'/register', user)\n  }\n  buscarUsuario():Observable<any>{\n    return this.http.get<any>('http://localhost:8080/cadastro/id')\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login/login.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n\n  constructor(private loginService:LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n  gerarImagem(){\n\n  }\n\n  sair(){\n      this.loginService.logout();\n  }\n\n}\n"," <mat-toolbar fxLayout=\"row\" fxLayoutAlign=\"space-between center\" color=\"primary\" style=\"position: absolute\">\n\n    <span>Docker Lab</span>\n    <span style=\"cursor: pointer\" (click)=\"sair()\" >Logout</span>\n\n</mat-toolbar>\n\n<div fxFill fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div fxFill fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <span class=\"mb40 titulo-home\">Bem-vindo Rafael, clique no botao para gerar uma imagem!</span>\n        <img width=\"500px\" src=\"https://www.petz.com.br/blog/wp-content/uploads/2019/07/vida-de-gato.jpg\" alt=\"\">\n        <button (click)=\"gerarImagem()\" class=\"mt20\" mat-raised-button color=\"accent\">\n            Gerar Imagem\n        </button>\n    </div>\n</div> \n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from './login.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  hide = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private loginService: LoginService,\n    private snackBar:MatSnackBar) {\n\n      if (this.loginService.userDataValue) { \n        this.router.navigate(['/']);\n    }\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  login() {\n    const user = this.loginForm.getRawValue();\n    console.log(user)\n\n    this.loginService.login(user)\n      .subscribe(res => {\n        this.router.navigate(['/home'])\n      }, error=>{\n        this.snackBar.open(error.error.message, 'Sair', {\n          duration: 3000\n        });\n      })\n\n\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      usuario: [''],\n      senha: ['']\n    });\n  }\n\n  IrParaCadastro() {\n    this.router.navigate(['/cadastro'])\n  }\n\n}\n","<div fxFill fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1.5rem\" class=\"mat-typography\">\n    <div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"2rem\">\n        </div>\n    </div>\n    <div class=\"login-container\" fxLayout=\"row\" fxLayoutAlign=\"center\">\n        <mat-card fxLayout=\"column \" fxLayoutAlign=\"center\" class=\"login-box\">\n            <form (ngSubmit)=\"login()\" [formGroup]=\"loginForm\" novalidate>\n                <div class=\"login-fields\" fxLayout=\"column\" fxLayoutAlign=\"space-evenly\">\n                    <img style=\"margin: auto;\" width=\"150px\"\n                        src=\"https://www.docker.com/sites/default/files/d8/2019-07/horizontal-logo-monochromatic-white.png\">\n                        \n                    <mat-form-field [hideRequiredMarker]=\"true\" appearance=\"fill\">\n                        <mat-label>Usuário</mat-label>\n                        <input  type=\"text\" matInput formControlName=\"usuario\"\n                            autocomplete=\"username\" required />\n                        <mat-error *ngIf=\"loginForm.controls.usuario.invalid && loginForm.controls.usuario.touched\">\n                            <span>É necessário informar um usuário</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field [hideRequiredMarker]=\"true\" appearance=\"fill\">\n                        <mat-label>Senha</mat-label>\n                        <input type=\"password\" matInput formControlName=\"senha\" [type]=\"hide ? 'password' : 'text'\"\n                            required />\n                        <button type=\"button\" mat-icon-button matSuffix (click)=\"hide = !hide\"\n                            [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                        </button>\n                        <mat-error *ngIf=\"loginForm.controls.senha.invalid && loginForm.controls.senha.touched\">\n                            <span>É necessário informar uma senha</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <button class=\"mt30\" mat-raised-button color=\"accent\" type=\"submit\">\n                        <span>Entrar</span>\n                    </button>\n                </div>\n            </form>\n            <div style=\"text-align: center\"  class=\"mt20\">\n                <mat-divider style=\"margin-bottom: 10px\"></mat-divider>\n                <span (click)=\"IrParaCadastro()\"  class=\"mt20 linkcadastro\">Não possui uma conta ? Cadastre-se agora</span>\n            </div>\n        </mat-card>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  public userDataSubject: BehaviorSubject<any>;\n  public userData: Observable<any>\n  \n  url = environment.urlbase + '/auth'\n\n  constructor(\n    private http: HttpClient,\n    private router:Router\n  ) {\n\n    this.userDataSubject = new BehaviorSubject<any>(JSON.parse(sessionStorage.getItem(\"user\")));\n    this.userData = this.userDataSubject.asObservable();\n\n\n  }\n\n\n  public get userDataValue() {\n    return this.userDataSubject.value;\n  }\n\n  login(user): Observable<any> {\n    return this.http.post<any>(this.url + '/login', user)\n      .pipe(map(user => {\n        sessionStorage.setItem(\"user\", JSON.stringify(user.user));\n        this.userDataSubject.next(user);\n      }))\n  }\n\n\n  \n  logout(){\n    sessionStorage.removeItem('user');\n    this.userDataSubject.next(null);\n    this.router.navigate(['/login']);;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  urlbase:\"http://localhost:8081\",\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {NgModule} from '@angular/core';\r\nimport {\r\n  MatCommonModule,\r\n  MatLineModule,\r\n  MatNativeDateModule,\r\n  MatOptionModule,\r\n  MatPseudoCheckboxModule,\r\n  MatRippleModule,\r\n} from '@angular/material/core';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatCommonModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatLineModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatOptionModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatPseudoCheckboxModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule\r\n  ],\r\n})\r\nexport class MaterialModule {\r\n}\r\n"],"sourceRoot":"webpack:///"}