{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/pages/cadastro/cadastro.component.ts","webpack:///src/app/pages/cadastro/cadastro.component.html","webpack:///src/app/pages/cadastro/cadastro.service.ts","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/login/login.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/material/material.module.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","children","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuard","loginService","router","route","state","currentUser","userDataValue","navigate","queryParams","returnUrl","url","providedIn","CadastroComponent","formBuilder","cadastroService","snackBar","createForm","cadastroForm","group","usuario","required","idade","senha","email","valid","user","getRawValue","cadastar","subscribe","res","error","open","message","duration","cadastrar","IrParaLogin","CadastroService","http","urlBase","urlbase","console","log","post","get","HomeComponent","logout","sair","gerarImagem","LoginComponent","hide","loginForm","login","IrParaCadastro","LoginService","userDataSubject","JSON","parse","sessionStorage","getItem","userData","asObservable","pipe","setItem","stringify","next","removeItem","value","environment","production","bootstrapModule","err","MaterialModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\nimport { AuthGuard } from './auth/auth.guard';\n\n\nconst routes: Routes = [\n\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'cadastro',\n    component: CadastroComponent\n  },\n  {\n    path: '',\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full'\n      },\n      {\n        path: 'home',\n        component: HomeComponent\n      },\n\n      {\n        path: '*',\n        component: CadastroComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  }\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'docker-lab';\n}\n","\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { CadastroComponent } from './pages/cadastro/cadastro.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from 'src/material/material.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    CadastroComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MaterialModule,\n    FlexLayoutModule \n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../pages/login/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class AuthGuard implements CanActivate {\n\n  constructor(private loginService:LoginService,private router:Router){\n  \n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    const currentUser = this.loginService.userDataValue;\n    if (currentUser) {\n      return true;\n    }\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CadastroService } from './cadastro.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'app-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.scss']\n})\nexport class CadastroComponent implements OnInit {\n  cadastroForm: FormGroup;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private cadastroService:CadastroService,\n    private snackBar:MatSnackBar) {\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  private createForm() {\n    this.cadastroForm = this.formBuilder.group({\n      usuario: ['', Validators.required],\n      idade: ['',Validators.required],\n      senha: ['',Validators.required],\n      email: [''],\n    });\n  }\n\n  cadastrar(){\n\n    if(!this.cadastroForm.valid){\n      return;\n    }\n    const user = this.cadastroForm.getRawValue();\n\n    this.cadastroService.cadastar(user).subscribe(res=>{\n      this.router.navigate(['/login'])\n    }, error=>{\n     \n      this.snackBar.open(error.error.message, 'Sair', {\n        duration: 3000\n      });\n    })\n  }\n\n  IrParaLogin(){\n    this.router.navigate(['/login'])\n  }\n\n}\n","<div fxFill fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1.5rem\" class=\"mat-typography\">\n    <div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"2rem\">\n        </div>\n    </div>\n    <div class=\"login-container\" fxLayout=\"row\" fxLayoutAlign=\"center\">\n        <mat-card fxLayout=\"column \" fxLayoutAlign=\"center\" class=\"login-box\">\n            <form (ngSubmit)=\"cadastrar()\" [formGroup]=\"cadastroForm\" novalidate>\n                <div class=\"login-fields\" fxLayout=\"column\" fxLayoutAlign=\"space-evenly\">\n                    <h1 class=\"mb30 mt30\" style=\"text-align: center\">Cadastro</h1>\n                    <mat-form-field [hideRequiredMarker]=\"true\" appearance=\"fill\">\n                        <mat-label>Usuario</mat-label>\n                        <input type=\"text\" matInput formControlName=\"usuario\" autocomplete=\"usuario\" required />\n                    </mat-form-field>\n                    <mat-form-field [hideRequiredMarker]=\"true\" appearance=\"fill\">\n                        <mat-label>Senha</mat-label>\n                        <input type=\"text\" matInput formControlName=\"senha\" autocomplete=\"senha\" required />\n                    </mat-form-field>\n                    <mat-form-field [hideRequiredMarker]=\"true\" appearance=\"fill\">\n                        <mat-label>Idade</mat-label>\n                        <input type=\"number\" matInput formControlName=\"idade\" autocomplete=\"username\" required />\n                    </mat-form-field>\n                    <!-- <mat-form-field [hideRequiredMarker]=\"true\" appearance=\"fill\">\n                        <mat-label>email</mat-label>\n                        <input type=\"text\" matInput formControlName=\"idade\" autocomplete=\"username\" required />\n                    </mat-form-field> -->\n                    <button class=\"mt30\" mat-raised-button color=\"accent\" type=\"submit\">\n                        <span>Cadastrar</span>\n                    </button>\n                </div>\n            </form>\n            <div style=\"text-align: center\"  class=\"mt20\">\n                <mat-divider style=\"margin-bottom: 10px\"></mat-divider>\n                <span (click)=\"IrParaLogin()\"  class=\"mt20 linkcadastro\">voltar para tela de login</span>\n            </div>\n        </mat-card>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CadastroService {\n\n  constructor(private http:HttpClient) { }\n\n  urlBase = environment.urlbase+'/auth'\n\n  cadastar(user):Observable<any>{\n    console.log(user)\n    return this.http.post<any>(this.urlBase +'/register', user)\n  }\n  buscarUsuario():Observable<any>{\n    return this.http.get<any>('http://localhost:8080/cadastro/id')\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login/login.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n\n  constructor(private loginService:LoginService) { }\n\n  ngOnInit(): void {\n  }\n\n  gerarImagem(){\n\n  }\n\n  sair(){\n      this.loginService.logout();\n  }\n\n}\n"," <mat-toolbar fxLayout=\"row\" fxLayoutAlign=\"space-between center\" color=\"primary\" style=\"position: absolute\">\n\n    <span>Docker Lab</span>\n    <span style=\"cursor: pointer\" (click)=\"sair()\" >Logout</span>\n\n</mat-toolbar>\n\n<div fxFill fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div fxFill fxLayout=\"column\" fxLayoutAlign=\"center center\">\n        <span class=\"mb40 titulo-home\">Bem-vindo Rafael, clique no botao para gerar uma imagem!</span>\n        <img width=\"500px\" src=\"https://www.petz.com.br/blog/wp-content/uploads/2019/07/vida-de-gato.jpg\" alt=\"\">\n        <button (click)=\"gerarImagem()\" class=\"mt20\" mat-raised-button color=\"accent\">\n            Gerar Imagem\n        </button>\n    </div>\n</div> \n\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from './login.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  hide = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private loginService: LoginService,\n    private snackBar:MatSnackBar) {\n\n      if (this.loginService.userDataValue) { \n        this.router.navigate(['/']);\n    }\n\n  }\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  login() {\n    const user = this.loginForm.getRawValue();\n    console.log(user)\n\n    this.loginService.login(user)\n      .subscribe(res => {\n        this.router.navigate(['/home'])\n      }, error=>{\n        this.snackBar.open(error.error.message, 'Sair', {\n          duration: 3000\n        });\n      })\n\n\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      usuario: [''],\n      senha: ['']\n    });\n  }\n\n  IrParaCadastro() {\n    this.router.navigate(['/cadastro'])\n  }\n\n}\n","<div fxFill fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"1.5rem\" class=\"mat-typography\">\n    <div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"2rem\">\n        </div>\n    </div>\n    <div class=\"login-container\" fxLayout=\"row\" fxLayoutAlign=\"center\">\n        <mat-card fxLayout=\"column \" fxLayoutAlign=\"center\" class=\"login-box\">\n            <form (ngSubmit)=\"login()\" [formGroup]=\"loginForm\" novalidate>\n                <div class=\"login-fields\" fxLayout=\"column\" fxLayoutAlign=\"space-evenly\">\n                    <img style=\"margin: auto;\" width=\"150px\"\n                        src=\"https://www.docker.com/sites/default/files/d8/2019-07/horizontal-logo-monochromatic-white.png\">\n                        \n                    <mat-form-field [hideRequiredMarker]=\"true\" appearance=\"fill\">\n                        <mat-label>Usuário</mat-label>\n                        <input  type=\"text\" matInput formControlName=\"usuario\"\n                            autocomplete=\"username\" required />\n                        <mat-error *ngIf=\"loginForm.controls.usuario.invalid && loginForm.controls.usuario.touched\">\n                            <span>É necessário informar um usuário</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field [hideRequiredMarker]=\"true\" appearance=\"fill\">\n                        <mat-label>Senha</mat-label>\n                        <input type=\"password\" matInput formControlName=\"senha\" [type]=\"hide ? 'password' : 'text'\"\n                            required />\n                        <button type=\"button\" mat-icon-button matSuffix (click)=\"hide = !hide\"\n                            [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                        </button>\n                        <mat-error *ngIf=\"loginForm.controls.senha.invalid && loginForm.controls.senha.touched\">\n                            <span>É necessário informar uma senha</span>\n                        </mat-error>\n                    </mat-form-field>\n                    <button class=\"mt30\" mat-raised-button color=\"accent\" type=\"submit\">\n                        <span>Entrar</span>\n                    </button>\n                </div>\n            </form>\n            <div style=\"text-align: center\"  class=\"mt20\">\n                <mat-divider style=\"margin-bottom: 10px\"></mat-divider>\n                <span (click)=\"IrParaCadastro()\"  class=\"mt20 linkcadastro\">Não possui uma conta ? Cadastre-se agora</span>\n            </div>\n        </mat-card>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  public userDataSubject: BehaviorSubject<any>;\n  public userData: Observable<any>\n  \n  url = environment.urlbase + '/auth'\n\n  constructor(\n    private http: HttpClient,\n    private router:Router\n  ) {\n\n    this.userDataSubject = new BehaviorSubject<any>(JSON.parse(sessionStorage.getItem(\"user\")));\n    this.userData = this.userDataSubject.asObservable();\n\n\n  }\n\n\n  public get userDataValue() {\n    return this.userDataSubject.value;\n  }\n\n  login(user): Observable<any> {\n    return this.http.post<any>(this.url + '/login', user)\n      .pipe(map(user => {\n        sessionStorage.setItem(\"user\", JSON.stringify(user.user));\n        this.userDataSubject.next(user);\n      }))\n  }\n\n\n  \n  logout(){\n    sessionStorage.removeItem('user');\n    this.userDataSubject.next(null);\n    this.router.navigate(['/login']);;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  urlbase:\"http://localhost:8081\",\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {NgModule} from '@angular/core';\r\nimport {\r\n  MatCommonModule,\r\n  MatLineModule,\r\n  MatNativeDateModule,\r\n  MatOptionModule,\r\n  MatPseudoCheckboxModule,\r\n  MatRippleModule,\r\n} from '@angular/material/core';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatCommonModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatLineModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatOptionModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatPseudoCheckboxModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule\r\n  ],\r\n})\r\nexport class MaterialModule {\r\n}\r\n"]}